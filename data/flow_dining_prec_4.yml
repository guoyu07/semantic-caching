-
  type: BaiduSource
  # init_args: [121.297198, 31.209686, 121.489795, 31.074682]
  init_args: [121.397198, 31.209686, 121.409795, 31.174682, 4]
-
  type: WebAction
  actor: Baidu
  method: search
  input:
    lng: { map: [ origin, lng ], post: [round, 4] }
    lat: { map: [ origin, lat ], post: [round, 4] }
    q: [ query, q ]
    radius: [ query, radius ]
  output:
    hotel: [ results, 0 ]
  description: Get a nearby restaurant
-
  type: Parallel
  branches:
    -
      -  
        type: WebAction
        actor: Baidu
        method: detail
        input: 
          uid: [ hotel, uid ]
        output:
          detail: [ result, detail_info ]
        description: get the deatils of that restaurant
      -
        type: WebAction
        actor: Baidu
        method: event_detail
        input:
          uid: [ hotel, uid]
        output:
          events: [ result, events ]
        description: get the events of that restaurant
    -
      -
        type: WebAction
        actor: Baidu
        method: locate
        input:
          lat: { map: [ origin, lat ], post: [round, 4] }
          lng: { map: [ origin, lng ], post: [round, 4] }
        output: 
          area_addr: [ result, addressComponent ]
        description: get the addr component of origin
      -
        type: WebAction
        actor: Convert
        method: open_weather
        input:
          name_cn: [ area_addr, district ]
          prov_cn: [ area_addr, province ]
        output:
          area: [ results, 0 ]
        description: convert address to area_id
      # forecast and index can run parallel
      - 
        type: Parallel
        branches:
          -
            - 
              type: WebAction
              actor: OpenWeather
              input:
                areaid: [ area, id ]
              output:
                index: [ i ]
              method: index_v
              description: get the index
          -  
            -
              type: WebAction
              actor: OpenWeather
              method: forecast_v
              input:
                areaid: [ area, id ]
              output:
                weather: [c]
                forecast: [f]
              description: get the forecast
      -
        type: Exclusive
        condition: 
          - [ [ weather, forecast, f1, fa ], <=, 2, 0 ]
          - [ [ weather, forecast, f1, fb ], <=, 2, 0 ]
        prob:
        branches:
          -
            -
              type: WebAction
              actor: Baidu
              method: search
              input:
                # location of origin or destination
                lng: { map: [ origin, lng ], post: [round, 4] }
                lat: { map: [ origin, lat ], post: [round, 4] }
                q: '停车场'
                radius: [ query, radius ]
              output:
                parking_lot: [ results, 0 ]
              description: find a nearby parking lot
            -
              type: WebAction
              actor: Baidu
              method: direct
              input: 
                org_lng: { map: [ origin, lng ], post: [round, 4] }
                org_lat: { map: [ origin, lat ], post: [round, 4] }
                dest_lng: { map: [ parking_lot, location, lng ], post: [round, 4] }
                dest_lat: { map: [ parking_lot, location, lat ], post: [round, 4] }
              output:
                direct_to_park: [ result ]
              description: Get the routes to the restaurant
            -
              type: WebAction
              actor: Baidu
              method: direct
              input: 
                org_lng: { map: [ parking_lot, location, lng ], post: [round, 4] }
                org_lat: { map: [ parking_lot, location, lat ], post: [round, 4] }
                dest_lng: { map: [ hotel, location, lng ], post: [round, 4] }
                dest_lat: { map: [ hotel, location, lat ], post: [round, 4] }
              output:
                direct_to_hotel: [ result ]
              description: Get the routes to the restaurant
          -
            -
              type: WebAction
              actor: Baidu
              method: direct
              input: 
                org_lng: { map: [ origin, lng ], post: [round, 4] }
                org_lat: { map: [ origin, lat ], post: [round, 4] }
                dest_lng: { map: [ hotel, location, lng ], post: [round, 4] }
                dest_lat: { map: [ hotel, location, lat ], post: [round, 4] }
                mode: transit
              output:
                direction: [ result ]
              description: Get the routes to the restaurant
